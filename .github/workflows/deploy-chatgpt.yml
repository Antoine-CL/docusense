name: Deploy-DocuSense

on:
  push:
    branches: [main]
  workflow_dispatch: # allow manual "Run workflow"

env:
  RG_NAME: docusense-rg
  LOCATION: canadaeast
  ENV_NAME: prod # bicep param
  STATIC_APP_NAME: docusense-web # created by bicep
  FUNC_APP_NAME: docusense-func # created by bicep

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # ────────────────────────────────── 1. Checkout ────────────────────────────
      - uses: actions/checkout@v4

      # ──────────────────────────────── 2. Login to Azure ────────────────────────
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }} # svc-principal JSON

      # ─────────────────────────────── 3. Deploy Bicep (idempotent) ──────────────
      - name: ARM / Bicep deploy
        run: |
          az deployment group create \
            --resource-group $RG_NAME \
            --template-file docusense.bicep \
            --parameters envName=$ENV_NAME

      # ────────────────────────── 4. Build & deploy React SPA ────────────────────
      - name: Node setup
        uses: actions/setup-node@v4
        with: { node-version: "18" }

      - name: Build SPA
        working-directory: docusense-frontend
        run: |
          npm ci
          npm run build
        env:
          REACT_APP_API_BASE: ${{ secrets.API_BASE_URL }}

      - name: Deploy Static Web App
        uses: Azure/static-web-apps-deploy@v2
        with:
          app_location: "docusense-frontend/build"
          api_location: "" # none – we deploy functions separately
          skip_app_build: true # we already built
          skip_api_build: true
          azure_static_web_apps_api_token: ${{ secrets.SWA_DEPLOY_TOKEN }}
          # site-name must match name in bicep
          site_name: ${{ env.STATIC_APP_NAME }}

          # ───────────────────────────── 5. Test Admin Endpoints ──────────────────
    - name: Setup Python
      uses: actions/setup-python@v5
      with: { python-version: "3.11" }

    - name: Install test dependencies
      run: |
        pip install pytest fastapi[all] httpx

    - name: Run admin endpoint tests
      working-directory: docusense-backend
      run: |
        python -m pytest ../tests/test_admin_endpoints.py -v

    # ───────────────────────────── 6. Publish Azure Functions ──────────────────
    - name: Install Azure Functions Core Tools
      run: |
        curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg
        sudo mv microsoft.gpg /etc/apt/trusted.gpg.d/microsoft.gpg
        sudo sh -c 'echo "deb [arch=amd64] https://packages.microsoft.com/repos/microsoft-ubuntu-$(lsb_release -cs)-prod $(lsb_release -cs) main" > /etc/apt/sources.list.d/dotnetdev.list'
        sudo apt-get update
        sudo apt-get install azure-functions-core-tools-4

    - name: Install func dependencies
      run: |
        pip install azure-functions-worker==1.* azure-cli

    - name: Deploy Function App
      working-directory: docusense-functions
      run: |
        func azure functionapp publish $FUNC_APP_NAME --python

          # ───────────────────────────── 7. Smoke test endpoint ──────────────────────
    - name: Health probe
      run: |
        curl -f ${{ secrets.API_BASE_URL }}/health
